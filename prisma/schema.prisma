// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String   
  role      UserRole @default(CLIENT) 
  createdAt DateTime @default(now())
}

model Client {
  id        String    @id @default(cuid())
  name      String
  phone     String    @unique
  email     String?   @unique
  address   String?
  createdAt DateTime  @default(now())

  
  vehicles  Vehicle[]
  orders    Order[]
}

model Vehicle {
  id        String   @id @default(cuid())
  plate     String   @unique
  model     String
  brand     String
  year      Int
  color     String?
  createdAt DateTime @default(now())

  
  owner     Client   @relation(fields: [ownerId], references: [id])
  ownerId   String
  orders    Order[]
}

model Order {
  id          String     @id @default(cuid())
  description String
  status      OrderStatus @default(OPEN) // Using an Enum for status is safer
  totalValue  Float?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  
  client      Client     @relation(fields: [clientId], references: [id])
  clientId    String
  vehicle     Vehicle    @relation(fields: [vehicleId], references: [id])
  vehicleId   String

  
  partsUsed   PartUsage[]
  servicesPerformed ServiceUsage[]
}



model Part {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  price       Float
  stock       Int      @default(0)
  
  
  orders      PartUsage[]
}

model Service {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  price       Float
  
  
  orders      ServiceUsage[]
}




model PartUsage {
  id        String @id @default(cuid())
  quantity  Int    @default(1)
  
  order     Order  @relation(fields: [orderId], references: [id])
  orderId   String
  part      Part   @relation(fields: [partId], references: [id])
  partId    String

  @@unique([orderId, partId]) 
}

model ServiceUsage {
  id        String @id @default(cuid())

  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  service   Service @relation(fields: [serviceId], references: [id])
  serviceId String

  @@unique([orderId, serviceId]) 
}



enum UserRole {
  ADMIN
  CLIENT
}

enum OrderStatus {
  OPEN
  IN_PROGRESS
  FINISHED
  CANCELED
}